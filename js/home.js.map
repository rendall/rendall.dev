{"version":3,"file":"home.js","mappings":"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","sources":["webpack://rendall.dev/./_src/ts/commentForm.js","webpack://rendall.dev/./_src/ts/home.js"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport var setupCommentForm = function (sendFunc) {\n    var hasCommentForm = document.querySelector(\"form[name=contact]\") !== null;\n    if (!hasCommentForm)\n        return;\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var isValidField = function (field) {\n        switch (field.name) {\n            case \"name\":\n                return field.value != \"\";\n            case \"email\":\n                return emailRegex.test(field.value);\n            case \"message\":\n                return (field.value != \"\" &&\n                    field.value.length > 5 &&\n                    field.value.includes(\" \"));\n            case \"form-name\": {\n                var formName = document\n                    .querySelector(\"form\")\n                    .attributes.getNamedItem(\"name\").value;\n                if (field.value !== formName)\n                    console.warn(\"form-name field '\".concat(field.value, \"' does not equal form name '\").concat(formName, \"'\"));\n                return true;\n            }\n            case \"city\":\n                return true;\n            case \"confirm\":\n                return true;\n            default: {\n                console.warn(\"unknown field name '\".concat(field.name, \"'\"));\n                return true;\n            }\n        }\n    };\n    var sendMessage = function (fields, url) {\n        var sendExec = function (resolve, reject) {\n            var params = fields\n                .map(function (f) { return \"\".concat(f.name, \"=\").concat(encodeURI(f.value)); })\n                .join(\"&\");\n            var sendReq = new XMLHttpRequest();\n            var onSendComplete = function (e) {\n                return sendReq.status === 200\n                    ? resolve()\n                    : reject(\"\".concat(sendReq.status, \":\").concat(sendReq.statusText));\n            };\n            sendReq.open(\"POST\", url);\n            sendReq.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            sendReq.timeout = 5000;\n            sendReq.addEventListener(\"load\", onSendComplete);\n            sendReq.send(params);\n        };\n        return new Promise(sendExec);\n    };\n    var showSuccess = function () {\n        document.querySelector(\".contain-form\").classList.add(\"is-success\");\n        document.querySelector(\".notify-success\").classList.add(\"is-success\");\n        resetError();\n    };\n    var showError = function (e) {\n        document.querySelector(\".notify-error\").classList.add(\"is-error\");\n        document.querySelector(\"#error-message\").innerHTML = e;\n        console.error(e);\n    };\n    var showInvalid = function (invalidFields) {\n        return invalidFields\n            .map(function (f) { return document.querySelector(\"label[for=\".concat(f, \"] + .notify-invalid\")); })\n            .forEach(function (div) { return div.classList.add(\"is-invalid\"); });\n    };\n    var resetState = function (collection, stateName, x, dummy) {\n        if (x === void 0) { x = 0; }\n        if (dummy === void 0) { dummy = null; }\n        return collection.item(x) === null\n            ? null\n            : resetState(collection, stateName, x + 1, collection.item(x).classList.remove(stateName));\n    };\n    var resetError = function () {\n        resetState(document.getElementsByClassName(\"notify-error\"), \"is-error\");\n        document.querySelector(\"#error-message\").innerHTML = \"\";\n    };\n    var onFormClick = function (e) {\n        e.preventDefault();\n        resetState(document.getElementsByClassName(\"notify-invalid\"), \"is-invalid\");\n        var fields = Array.from(document.querySelectorAll(\"form input,textarea\"));\n        var invalidFields = fields.reduce(function (acc, f) { return (isValidField(f) ? acc : __spreadArray(__spreadArray([], acc, true), [f.name], false)); }, []);\n        var isValid = invalidFields.length === 0;\n        var sendMessagePromise = sendFunc === undefined ? sendMessage : sendFunc;\n        if (isValid)\n            sendMessagePromise(fields, \"/\")\n                .then(function () { return showSuccess(); })\n                .catch(function (error) { return showError(error); });\n        else\n            showInvalid(invalidFields);\n    };\n    document.querySelector(\"form button\").addEventListener(\"click\", onFormClick);\n    var onFormToggle = function (e) {\n        e.preventDefault();\n        var isSuccess = document\n            .querySelector(\".notify-success\")\n            .classList.contains(\"is-success\");\n        if (isSuccess) {\n            document.querySelector(\".contain-form\").classList.remove(\"is-success\");\n            document.querySelector(\".contain-form\").classList.add(\"is-visible\");\n            document.querySelector(\".notify-success\").classList.remove(\"is-success\");\n            resetError();\n        }\n        else\n            document.querySelector(\".contain-form\").classList.toggle(\"is-visible\");\n    };\n};\n","import { setupCommentForm } from \"./commentForm\";\nsetupCommentForm();\n"],"names":["__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","sendFunc","document","querySelector","emailRegex","sendMessage","fields","url","Promise","resolve","reject","params","map","f","name","encodeURI","value","join","sendReq","XMLHttpRequest","open","setRequestHeader","timeout","addEventListener","e","status","statusText","send","resetState","collection","stateName","x","dummy","item","classList","remove","preventDefault","getElementsByClassName","querySelectorAll","invalidFields","reduce","acc","field","test","includes","formName","attributes","getNamedItem","console","warn","isValidField","then","add","innerHTML","catch","error","showError","forEach","div","showInvalid","setupCommentForm"],"sourceRoot":""}